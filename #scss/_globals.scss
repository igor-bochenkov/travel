@use "helpers" as *;

html {
  &.is-lock {
    overflow: hidden;
  }
}

body {
  @include fluid-text(20, 14);

  position: relative;
  background-color: var(--color-background);
  font-family: var(--font-family-base);
  color: var(--color-text);
  line-height: 1.3;
  height: 100%;
}

.wrapper {
  position: relative;
  max-width: 1440px;
  margin: 0 auto;
  background-color: var(--color-white);
  min-height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1 1 auto;
  background-image: url("../img/stories-bg.jpg");
  background-repeat: no-repeat;
  background-position: center bottom;
  //background-size: cover;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin: 0 auto;
  padding-inline: var(--container-padding-x);
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: var(--font-family-ui);
  color: var(--color-orange);
  font-weight: 500;
  line-height: 1.3;
  text-align: center;
}

h1,
.h1 {
  @include fluid-text(80, 40);

  font-family: var(--font-family-base);
  font-weight: 700;
  text-transform: none;
  line-height: 1.2;
  letter-spacing: -1px;
  color: var(--color-white);
  text-align: left;
}

h2,
.h2 {
  @include fluid-text(40, 20);

  text-transform: uppercase;
}

h3,
.h3 {
  @include fluid-text(35, 24);
  text-align: left;
  color: var(--color-blue);
}

p {
  --paragraphMarginBottom: #{rem(24)};
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;

  &[class] {
    text-decoration: none;
  }
}

:focus-visible {
  outline: rem(2) dashed var(--color-blue);
  outline-offset: rem(4);
  transition-duration: 0s !important;
}
