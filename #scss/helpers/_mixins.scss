@use "sass:math";
@use "functions" as *;

@mixin transition($time, $delay) {
  transition: all $time ease $delay;
}

// Показ / скрытие элементов
@mixin hide {
  opacity: 0;
  visibility: hidden;
}

@mixin show {
  opacity: 1;
  visibility: visible;
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

// Позиционирование
@mixin flex-center($isInline: false) {
  @if $isInline {
    display: inline-flex;
  } @else {
    display: flex;
  }

  justify-content: center;
  align-items: center;
}

@mixin cnt($h) {
  display: flex;
  flex-direction: column;
  height: $h;
  text-align: center;
  align-items: stretch;
  justify-content: center;
}

@mixin abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

@mixin abs-x {
  position: absolute;
  left: 50%;
  translate: -50%;
}

@mixin abs-y {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
}

// Фигуры
@mixin square($size) {
  display: block;
  width: $size;
  height: $size;
}

@mixin round($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
  overflow: hidden;
}

//Адаптивный шрифт
@mixin fluid-text($max: 48, $min: 16) {
  font-size: fluid($max, $min);
}

//Подключение шрифтов
@mixin font($font_name, $file_name, $weight, $style) {
  @font-face {
    font-family: $font_name;
    font-display: swap;
    src:
      url("../fonts/#{$file_name}.woff") format("woff"),
      url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

//? ============================================================================================
//Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobSize, $maxSize) {
  $addSize: $pcSize - $mobSize;
  @if $maxSize==1 {
    //Только если меньше контейнера
    font-size: $pcSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $maxSize==2 {
    //Только если больше контейнера
    font-size: $pcSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    //Всегда
    font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

//? ============================================================================================

@mixin transition_cubic($time, $delay) {
  -webkit-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -moz-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -ms-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -o-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
}

//POPUP-transform
@mixin popup-trrm($per, $px, $py, $pdeg) {
  transform: perspective($per) translate($px, $py) rotateX($pdeg);
}
